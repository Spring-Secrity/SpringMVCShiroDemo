<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <description>== Shiro Components ==</description>
    <!-- 会话Session ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <!-- 用户信息记住我功能的相关配置 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="v_v-re-baidu"/>
        <property name="httpOnly" value="true"/>
        <!-- 配置存储rememberMe Cookie的domain为 一级域名
        <property name="domain" value=".itboy.net"/>
         -->
        <property name="maxAge" value="2592000"/><!-- 30天时间，记住我30天 -->
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
        <property name="realm" ref="sampleRealm" />
        <!--<property name="sessionManager" ref="sessionManager"/>-->
        <!-- By default the servlet container sessions will be used.  Uncomment this line
             to use shiro's native sessions (see the JavaDoc for more): -->
        <!-- <property name="sessionMode" value="native"/> -->
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="cacheManager" ref="cacheManager" />
    </bean>

    <!-- custom shiro session listener -->
    <bean id="customSessionListener" class="com.anlu.core.shiro.listener.CustomSessionLisener">
        <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
    </bean>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--cookie的name，我故意取名叫xxxxbaidu -->
        <constructor-arg value="v_v-s-baidu"/>
        <property name="httpOnly" value="true"/>
        <!--cookie的有效时间 -->
        <property name="maxAge" value="-1"/>
        <!-- 配置存储Session Cookie的domain为 一级域名
        <property name="domain" value=".itboy.net"/>
         -->
    </bean>

    <!-- Session Manager -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 相隔多久检查一次session的有效性   -->
        <property name="sessionValidationInterval" value="1800000"/>
        <!-- session 有效时间为半小时 （毫秒单位）-->
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionDAO" ref="customShiroSessionDAO"/>
        <!-- session 监听，可以多个。 -->
        <property name="sessionListeners">
            <list>
                <ref bean="customSessionListener"/>
            </list>
        </property>
        <!-- 间隔多少时间检查，不配置是60分钟 -->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <!-- 是否开启 检测，默认开启 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!-- 是否删除无效的，默认也是开启 -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 会话Cookie模板 -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- session会话验证调度器 -->
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <!-- 间隔多少时间检查，不配置是60分钟 -->
        <property name="interval" value="${session.validate.timespan}"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- redis 的缓存 -->
    <bean id="jedisManager" class="com.anlu.core.shiro.cache.JedisManager">
        <property name="jedisPool" ref="jedisPool"/>
    </bean>
    <!-- session 创建、删除、查询 -->
    <bean id="jedisShiroSessionRepository" class="com.anlu.core.shiro.cache.JedisShiroSessionRepository">
        <property name="jedisManager" ref="jedisManager"/>
    </bean>


    <!-- custom shiro session listener -->
    <bean id="customShiroSessionDAO" class="com.anlu.core.shiro.CustomShiroSessionDAO">
        <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!-- 手动操作Session，管理Session -->
    <bean id="customSessionManager" class="com.anlu.core.shiro.session.CustomSessionManager">
        <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
        <property name="customShiroSessionDAO" ref="customShiroSessionDAO"/>
    </bean>

    <!-- 认证数据库存储-->
    <bean id="shiroManager" class="com.anlu.core.shiro.service.ShiroManagerImpl"/>
    <bean id="login" class="com.anlu.core.shiro.filter.LoginFilter"/>
    <bean id="role" class="com.anlu.core.shiro.filter.RoleFilter"/>
    <bean id="permission" class="com.anlu.core.shiro.filter.PermissionFilter"/>
    <bean id="simple" class="com.anlu.core.shiro.filter.SimpleAuthFilter"/>
    <!-- 授权 认证 -->
    <bean id="sampleRealm" class="com.anlu.core.shiro.token.SimpleRealm"></bean>

    <!-- session 校验单个用户是否多次登录 -->
    <bean id="kickoutSessionFilter" class="com.anlu.core.shiro.filter.KickoutSessionFilter">
        <property name="kickoutUrl" value="/u/login.shtml?kickout"/>
    </bean>
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/u/login.shtml"/>
        <!--	TODO 待提取	-->
        <property name="successUrl" value="/"/>
        <property name="unauthorizedUrl" value="/?login"/>

        <!--	初始配置，现采用自定义	-->
        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--# some example chain definitions:-->
                <!--# /admin/** = authc, roles[admin]-->
                <!--# /docs/** = authc, perms[document:read]-->
                <!--/login = anon-->
                <!--/logout = anon-->
                <!--/error = anon-->
                <!--/u/submitLogin = anon-->
                <!--&lt;!&ndash;/** = user&ndash;&gt;-->
                <!--# more URL-to-FilterChain definitions here-->
            <!--</value>-->
        <!--</property>-->

        <property name="filterChainDefinitions" value="#{shiroManager.loadFilterChainDefinitions()}"/>
        <property name="filters">
            <util:map>
                <entry key="login" value-ref="login"></entry>
                <entry key="role" value-ref="role"></entry>
                <entry key="simple" value-ref="simple"></entry>
                <entry key="permission" value-ref="permission"></entry>
                <entry key="kickout" value-ref="kickoutSessionFilter"></entry>
            </util:map>
        </property>

    </bean>
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />


    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- Enable Shiro Annotations for Spring-configured beans.  Only run after -->
    <!-- the lifecycleBeanProcessor has run: -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!-- ============================================================================ -->

</beans>

